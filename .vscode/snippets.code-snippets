{
	// Place your streamdeck-trackaudio workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"a{
  "Image setter/getter": {
    "prefix": "imgPath",
		"scope": "typescript",
    "body": [
      "/**",
      " * Returns the ${1:notListening}IconPath or the default template path if the",
      " * user didn't specify a custom icon.",
      " */",
      "get ${1:notListening}IconPath(): string {",
      "  return this._${1:notListening}IconPath ?? defaultTemplatePath;",
      "}",
      "",
      "/**",
      " * Sets the ${1:notListening}IconPath and re-compiles the SVG template if necessary.",
      " */",
      "set ${1:notListening}IconPath(newValue: string | undefined) {",
      "  if (",
      "    !this._compiled${1/(.*)/${1:/capitalize}/}Svg ||",
      "    this.${1:notListening}IconPath !== newValue",
      "  ) {",
      "    this._${1:notListening}IconPath = stringOrUndefined(newValue);",
      "    this._compiled${1/(.*)/${1:/capitalize}/}Svg = compileSvg(this.${1:notListening}IconPath);",
      "  }",
      "}"
    ],
    "description": "Replace notListening with your desired placeholder text"
  }
}